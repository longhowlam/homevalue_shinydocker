shiny::runApp()
runApp()
runApp()
runApp()
library(shinydashboard)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
huismodel = h2o.loadModel("data/DRF_model_R_1550832441075_2")
mijnhuis = data.frame(
PC2 = "11",
KoopConditie = "kosten koper",
ouderdom = 8,
Woonoppervlak = 125,
aantalkamers = 6,
Perceel = 100,
Inhoud = 140,
woningBeschrijving = "EengezinswoningTussenwoning"
) %>%
as.h2o
out = predict(huismodel, mijnhuis)
as.character(out)
out
out = predict(huismodel, mijnhuis) %>% as.data.frame()
as.character(out)
runApp()
runApp()
runApp()
shiny::runApp()
library(shinydashboard)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp('/opt/shiny-server/samples/sample-apps/buurtinfo')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("iml")
library(iml)
shiny::runApp()
runApp()
runApp()
runApp()
library(shiny)
shiny::runApp()
library(shinydashboard)
shiny::runApp()
tmp = "1234"
tmp
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinydashboard)
library(data.table)
library(shinycssloaders)
library(h2o)
library(magrittr)
library(iml)
h2o.init()
huismodel_omg    = h2o.loadModel("data/DRF_model_R_1551255540205_3")
huismodel_omg
h2o.varimp_plot(huismodel_omg)
predictor_omg.rf = readRDS("data/iml_precitor_omgeving.RDS")
PC_lookup        = readRDS("data/PC_lookup.RDs")
omgeving = PC_lookup[PC6 == "1628EP",]
omgeving
input = list(
PC = "1628EP",
vrijopnaam = "kosten koper",
ouderdom = 8,
woonoppervlakte = 100,
perceel = 100,
inhoud = 350,
typehuis = "EengezinswoningTussenwoning"
)
mijnhuis = dplyr::bind_cols(
data.frame(
PC2 = stringr::str_sub(input$PC,1,2),
KoopConditie = ifelse(input$vrijopnaam, "vrij op naam", "kosten koper"),
ouderdom = input$ouderdom,
Woonoppervlak = input$woonoppervlakte,
aantalkamers = input$aantalkamers,
Perceel = input$perceel,
Inhoud = input$inhoud,
woningBeschrijving = input$typehuis
),
omgeving
)
data.frame(
PC2 = stringr::str_sub(input$PC,1,2),
KoopConditie = ifelse(input$vrijopnaam, "vrij op naam", "kosten koper"),
ouderdom = input$ouderdom,
Woonoppervlak = input$woonoppervlakte,
aantalkamers = input$aantalkamers,
Perceel = input$perceel,
Inhoud = input$inhoud,
woningBeschrijving = input$typehuis
)
mijnhuis = dplyr::bind_cols(
data.frame(
PC2 = stringr::str_sub(input$PC,1,2),
KoopConditie = ifelse(input$vrijopnaam, "vrij op naam", "kosten koper"),
ouderdom = input$ouderdom,
Woonoppervlak = input$woonoppervlakte,
aantalkamers = input$aantalkamers,
Perceel = input$perceel,
Inhoud = input$inhoud,
woningBeschrijving = input$typehuis
),
omgeving
)
data.frame(
PC2 = stringr::str_sub(input$PC,1,2),
KoopConditie = ifelse(input$vrijopnaam, "vrij op naam", "kosten koper"),
ouderdom = input$ouderdom,
Woonoppervlak = input$woonoppervlakte,
aantalkamers = input$aantalkamers,
Perceel = input$perceel,
Inhoud = input$inhoud,
woningBeschrijving = input$typehuis
)
input$typehuis
input$inhoud
input$perceel
input$aantalkamers
input = list(
PC = "1628EP",
vrijopnaam = "kosten koper",
ouderdom = 8,
woonoppervlakte = 100,
perceel = 100,
inhoud = 350,
typehuis = "EengezinswoningTussenwoning",
aantalkamers = 5
)
mijnhuis = dplyr::bind_cols(
data.frame(
PC2 = stringr::str_sub(input$PC,1,2),
KoopConditie = ifelse(input$vrijopnaam, "vrij op naam", "kosten koper"),
ouderdom = input$ouderdom,
Woonoppervlak = input$woonoppervlakte,
aantalkamers = input$aantalkamers,
Perceel = input$perceel,
Inhoud = input$inhoud,
woningBeschrijving = input$typehuis
),
omgeving
)
print(mijnhuis)
out = round(predict(huismodel_omg , mijnhuis %>% as.h2o()) %>% as.data.frame())
out
library(shinydashboard)
library(data.table)
library(shinycssloaders)
library(h2o)
library(magrittr)
library(iml)
h2o.init()
huismodel_omg    = h2o.loadModel("data/DRF_model_R_1551255540205_3")
PC_lookup        = readRDS("data/PC_lookup.RDs")
predictor_omg.rf = readRDS("data/iml_precitor_omgeving.RDS")
input = list(
PC = "1628EP",
vrijopnaam = "kosten koper",
ouderdom = 8,
woonoppervlakte = 100,
perceel = 100,
inhoud = 350,
typehuis = "EengezinswoningTussenwoning",
aantalkamers = 5
)
mijnhuis = dplyr::bind_cols(
data.frame(
PC2 = stringr::str_sub(input$PC,1,2),
KoopConditie = ifelse(input$vrijopnaam, "vrij op naam", "kosten koper"),
ouderdom = input$ouderdom,
Woonoppervlak = input$woonoppervlakte,
aantalkamers = input$aantalkamers,
Perceel = input$perceel,
Inhoud = input$inhoud,
woningBeschrijving = input$typehuis
),
omgeving
)
print(mijnhuis)
out = round(predict(huismodel_omg , mijnhuis %>% as.h2o()) %>% as.data.frame())
PC_lookup        = readRDS("data/PC_lookup.RDs")
PC_lookup
omgeving = PC_lookup[PC6 == "1628EP",]
input = list(
PC = "1628EP",
vrijopnaam = "kosten koper",
ouderdom = 8,
woonoppervlakte = 100,
perceel = 100,
inhoud = 350,
typehuis = "EengezinswoningTussenwoning",
aantalkamers = 5
)
mijnhuis = dplyr::bind_cols(
data.frame(
PC2 = stringr::str_sub(input$PC,1,2),
KoopConditie = ifelse(input$vrijopnaam, "vrij op naam", "kosten koper"),
ouderdom = input$ouderdom,
Woonoppervlak = input$woonoppervlakte,
aantalkamers = input$aantalkamers,
Perceel = input$perceel,
Inhoud = input$inhoud,
woningBeschrijving = input$typehuis
),
omgeving
)
print(mijnhuis)
out = round(predict(huismodel_omg , mijnhuis %>% as.h2o()) %>% as.data.frame())
out
shiny::runApp()
runApp()
h2o.init()
predictor_omg.rf
predictor.rf     = readRDS( "data/iml_precitor.RDS")
predictor_omg.rf = readRDS("data/iml_precitor_omgeving.RDS")
predictor.rf
predictor_omg.rf
mijnhuis
sh_out = Shapley$new(predictor_omg.rf, x.interest = mijnhuis)
mijnhuis$PC6 = NULL
mijnhuis
sh_out = Shapley$new(predictor_omg.rf, x.interest = mijnhuis)
runApp()
runApp()
h2o.shutdown()
install.packages(c("iml", "shinycssloaders"))
shiny::runApp()
